{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.function.name.js","webpack:///./src/components/UploadFiles.vue","webpack:///./node_modules/@babel/runtime/helpers/esm/classCallCheck.js","webpack:///./node_modules/@babel/runtime/helpers/esm/createClass.js","webpack:///./src/http-common.js","webpack:///./src/services/UploadFilesService.js","webpack:///./src/components/UploadFiles.vue?ac89"],"names":["DESCRIPTORS","defineProperty","f","FunctionPrototype","Function","prototype","FunctionPrototypeToString","toString","nameRE","NAME","configurable","get","call","this","match","error","class","role","currentFile","aria-valuenow","progress","aria-valuemin","aria-valuemax","style","type","ref","selectFile","disabled","selectedFiles","upload","message","fileInfos","file","index","key","href","url","name","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","writable","Object","_createClass","protoProps","staticProps","axios","create","baseURL","headers","UploadFilesService","onUploadProgress","formData","FormData","append","http","post","data","undefined","methods","$refs","files","item","event","Math","round","loaded","total","then","response","getFiles","catch","mounted","render"],"mappings":"mGAAA,IAAIA,EAAc,EAAQ,QACtBC,EAAiB,EAAQ,QAAuCC,EAEhEC,EAAoBC,SAASC,UAC7BC,EAA4BH,EAAkBI,SAC9CC,EAAS,wBACTC,EAAO,OAIPT,KAAiBS,KAAQN,IAC3BF,EAAeE,EAAmBM,EAAM,CACtCC,cAAc,EACdC,IAAK,WACH,IACE,OAAOL,EAA0BM,KAAKC,MAAMC,MAAMN,GAAQ,GAC1D,MAAOO,GACP,MAAO,Q,4ECfaC,MAAM,Y,GAYvBA,MAAM,mB,GAQRA,MAAM,oBAAoBC,KAAK,S,GAE/BD,MAAM,Q,EACP,eAA4C,OAAvCA,MAAM,eAAc,iBAAa,G,GAElCA,MAAM,+B,gDA1BlB,eAsCO,YArCQ,EAAAE,a,iBAAX,eAWM,MAXN,EAWM,CAVF,eASM,OARNF,MAAM,sDACNC,KAAK,cACJE,gBAAe,EAAAC,SACfC,gBAAe,EACfC,gBAAe,IACfC,MAAK,OAAU,EAAAH,SAAQ,M,eAEtB,EAAAA,UAAU,KACZ,yB,sBAEJ,eAEQ,QAFR,EAEQ,CADJ,eAAqD,SAA9CI,KAAK,OAAOC,IAAI,OAAQ,SAAM,8BAAE,EAAAC,WAAA,sB,YAG3C,eAES,UAFDV,MAAM,kBAAmBW,UAAW,EAAAC,cAAgB,QAAK,8BAAE,EAAAC,OAAA,sBAAQ,WAE3E,gBAEA,eAA6D,MAA7D,EAA6D,eAAf,EAAAC,SAAO,GAErD,eAaM,MAbN,EAaM,CAZF,EAEA,eASK,KATL,EASK,E,mBARD,eAOK,2BALkB,EAAAC,WAAS,SAAxBC,EAAKC,G,wBAFb,eAOK,MANLjB,MAAM,kBAELkB,IAAKD,G,CAEN,eAAqC,KAAjCE,KAAMH,EAAKI,K,eAAOJ,EAAKK,MAAI,iB,YCjC5B,SAASC,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIC,UAAU,qCCFxB,SAASC,EAAkBC,EAAQC,GACjC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CACrC,IAAIE,EAAaH,EAAMC,GACvBE,EAAWC,WAAaD,EAAWC,aAAc,EACjDD,EAAWrC,cAAe,EACtB,UAAWqC,IAAYA,EAAWE,UAAW,GACjDC,OAAOjD,eAAe0C,EAAQI,EAAWb,IAAKa,IAInC,SAASI,EAAaX,EAAaY,EAAYC,GAG5D,OAFID,GAAYV,EAAkBF,EAAYnC,UAAW+C,GACrDC,GAAaX,EAAkBF,EAAaa,GACzCb,E,yBCXMc,MAAMC,OAAO,CACxBC,QAAS,wBACTC,QAAS,CACL,eAAgB,sBCHlBC,E,2EACK1B,EAAM2B,GACT,IAAIC,EAAW,IAAIC,SAEnB,OADAD,EAASE,OAAO,OAAQ9B,GACjB+B,EAAKC,KAAK,UAAWJ,EAAU,CAClCH,QAAS,CACL,eAAgB,uBAEpBE,uB,iCAIJ,OAAOI,EAAKpD,IAAI,c,KAIT,MAAI+C,EJ4BA,GACXrB,KAAM,eACN4B,KAFW,WAGP,MAAM,CACFrC,mBAAesC,EACfhD,iBAAagD,EACb9C,SAAU,EACVU,QAAS,GACTC,UAAW,KAGnBoC,QAAQ,CACJzC,WADI,WAEAb,KAAKe,cAAgBf,KAAKuD,MAAMpC,KAAKqC,OAGzCxC,OALI,WAKI,WACJhB,KAAKO,SAAW,EAChBP,KAAKK,YAAcL,KAAKe,cAAc0C,KAAK,GAC3C,EAAczC,OAAOhB,KAAKK,aAAa,SAAAqD,GACnC,EAAKnD,SAAWoD,KAAKC,MAAO,IAAIF,EAAMG,OAAUH,EAAMI,UAEzDC,MAAK,SAAAC,GAEF,OADA,EAAK/C,QAAU+C,EAASZ,KAAKnC,QACtB,EAAcgD,cAExBF,MAAK,SAAAP,GACF,EAAKtC,UAAYsC,EAAMJ,QAE1Bc,OAAM,WACH,EAAK3D,SAAW,EAChB,EAAKU,QAAU,6BACf,EAAKZ,iBAAcgD,KAGvBrD,KAAKe,mBAAgBsC,GAGzBc,QA3BI,WA2BK,WACL,EAAcF,WAAWF,MAAK,SAAAC,GAC1B,EAAK9C,UAAY8C,EAASZ,WKnF9C,EAAOgB,OAASA,EAED","file":"js/chunk-b241c54e.d3a35280.js","sourcesContent":["var DESCRIPTORS = require('../internals/descriptors');\nvar defineProperty = require('../internals/object-define-property').f;\n\nvar FunctionPrototype = Function.prototype;\nvar FunctionPrototypeToString = FunctionPrototype.toString;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// Function instances `.name` property\n// https://tc39.github.io/ecma262/#sec-function-instances-name\nif (DESCRIPTORS && !(NAME in FunctionPrototype)) {\n  defineProperty(FunctionPrototype, NAME, {\n    configurable: true,\n    get: function () {\n      try {\n        return FunctionPrototypeToString.call(this).match(nameRE)[1];\n      } catch (error) {\n        return '';\n      }\n    }\n  });\n}\n","<template>\r\n<div>\r\n    <div v-if=\"currentFile\" class=\"progress\">\r\n        <div\r\n        class=\"progress-bar progress-bar-info progress-bar-striped\"\r\n        role=\"progressbar\"\r\n        :aria-valuenow=\"progress\"\r\n        :aria-valuemin=\"0\"\r\n        :aria-valuemax=\"100\"\r\n        :style=\"{width: progress + '%'}\"\r\n        >\r\n        {{progress}}%\r\n        </div>\r\n    </div>\r\n    <label class=\"btn btn-default\">\r\n        <input type=\"file\" ref=\"file\" @change=\"selectFile\" />\r\n    </label>\r\n\r\n    <button class=\"btn btn-success\" :disabled=\"!selectedFiles\" @click=\"upload\">\r\n        Upload \r\n    </button>\r\n\r\n    <div class=\"alert alert-light\" role=\"alert\">{{message}}</div>\r\n\r\n    <div class=\"card\">\r\n        <div class=\"card-header\">List of Files</div>\r\n        \r\n        <ul class=\"list-group list-group-flush\">\r\n            <li\r\n            class=\"list-group-item\"\r\n            v-for=\"(file,index) in fileInfos\"\r\n            :key=\"index\"\r\n            >\r\n            <a :href=\"file.url\">{{file.name}}</a>\r\n\r\n            </li>\r\n        </ul>\r\n    </div>\r\n\r\n </div>   \r\n    \r\n</template>\r\n\r\n<script>\r\n    import UploadService from \"../services/UploadFilesService\";\r\n\r\n    export default {\r\n        name: \"upload-files\",\r\n        data(){\r\n            return{\r\n                selectedFiles: undefined,\r\n                currentFile: undefined,\r\n                progress: 0,\r\n                message: \"\",\r\n                fileInfos: []\r\n            };\r\n        },\r\n        methods:{\r\n            selectFile(){\r\n                this.selectedFiles = this.$refs.file.files;\r\n            },\r\n\r\n            upload(){\r\n                this.progress = 0;\r\n                this.currentFile = this.selectedFiles.item(0);\r\n                UploadService.upload(this.currentFile, event => {\r\n                    this.progress = Math.round((100*event.loaded) / event.total)\r\n                })\r\n                .then(response => {\r\n                    this.message = response.data.message;\r\n                    return UploadService.getFiles();               \r\n                })\r\n                .then(files => {\r\n                    this.fileInfos = files.data;\r\n                })\r\n                .catch(() => {\r\n                    this.progress = 0;\r\n                    this.message = \"Could not upload the file!\";\r\n                    this.currentFile = undefined;\r\n                });\r\n\r\n                this.selectedFiles = undefined;\r\n            },\r\n\r\n            mounted(){\r\n                UploadService.getFiles().then(response => {\r\n                    this.fileInfos = response.data;\r\n                });\r\n            }\r\n        }\r\n    };\r\n    \r\n</script>","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: \"http://localhost:8080\",\r\n    headers: {\r\n        \"Content-type\": \"application/json\"\r\n    }\r\n});","import http from \"../http-common\";\r\n\r\nclass UploadFilesService{\r\n    upload(file, onUploadProgress){\r\n        let formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        return http.post(\"/upload\", formData, {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            },\r\n            onUploadProgress\r\n        }); \r\n    }\r\n    getFiles(){\r\n        return http.get(\"/files\");\r\n    }\r\n}\r\n\r\nexport default new UploadFilesService();","import { render } from \"./UploadFiles.vue?vue&type=template&id=588effc4&bindings={\\\"selectedFiles\\\":\\\"data\\\",\\\"currentFile\\\":\\\"data\\\",\\\"progress\\\":\\\"data\\\",\\\"message\\\":\\\"data\\\",\\\"fileInfos\\\":\\\"data\\\",\\\"selectFile\\\":\\\"options\\\",\\\"upload\\\":\\\"options\\\",\\\"mounted\\\":\\\"options\\\"}\"\nimport script from \"./UploadFiles.vue?vue&type=script&lang=js\"\nexport * from \"./UploadFiles.vue?vue&type=script&lang=js\"\nscript.render = render\n\nexport default script"],"sourceRoot":""}